[tox]
isolated_build = true
envlist = ruff-format, ruff-check, pytest-{min,latest}, mypy, pylint, bandit


[testenv:ruff-format]
description = 'Check code style with Ruff'
deps =
    ruff >=0.2.1
commands = ruff format --check --force-exclude fastapi_hypermodel tests examples

[testenv:pytest-latest]
description = 'Run Python tests with pytest test runner using latest dependencies.'
deps =
    httpx >=0.26.0
    pytest >=8.0.1
    pytest-cov >=4.1.0
    pytest-lazy-fixtures >=1.0.5
    coverage >=7.4.1
commands = coverage run --module pytest -k "not integration" tests/
           coverage report --show-missing --skip-covered --fail-under 100 --omit "examples/*,tests/integration/*"
           coverage run --module pytest -k "integration" tests/
           coverage report --show-missing --skip-covered --omit "tests/*"

[testenv:pytest-min]
description = 'Run Python tests with pytest test runner using oldest possible versions'
deps =
    httpx >=0.26.0
    pytest >=8.0.1
    pytest-cov >=4.1.0
    pytest-lazy-fixtures >=1.0.5
    coverage >=7.4.1

    # Minimal Versions as per pyproject.toml
    pydantic == 2.8.0
    fastapi == 0.115.2
    typing_extensions == 4.12.2
    jsonref == 0.1
    jsonschema == 2.0.0
    frozendict == 2.0.2
    starlette == 0.37.2
commands = coverage run --module pytest -k "not integration" tests/
           coverage report --show-missing --skip-covered --fail-under 100 --omit "examples/*,tests/integration/*"
           coverage run --module pytest -k "integration" tests/
           coverage report --show-missing --skip-covered --omit "tests/*"

[testenv:mypy]
description = 'Execute static analysis with mypy (type annotations).'
deps =
    mypy >=1.8.0
commands = mypy --install-types --non-interactive fastapi_hypermodel/

[testenv:ruff-check]
description = 'Execute static analysis with ruff.'
deps =
    ruff >=0.2.1
commands = ruff check --no-fix --force-exclude --exit-non-zero-on-fix fastapi_hypermodel tests examples

[testenv:pylint]
description = 'Execute static analysis with pylint.'
deps =
    pylint >=3.0.3
    pylint_pydantic >=0.3.2
commands = pylint fastapi_hypermodel/

[testenv:bandit]
description = 'Execute static analysis with bandit.'
deps =
    bandit >=1.7.7
commands = bandit -r fastapi_hypermodel/
